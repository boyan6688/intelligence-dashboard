name: Content Auto-Update

# --- 触发条件 ---
on:
  # 1. 定时执行: 使用CRON表达式，此处设置为“每小时的第0分钟”执行。
  schedule:
    - cron: '0 * * * *'
  # 2. 手动触发: 允许您在GitHub仓库的Actions页面手动启动此工作流。
  workflow_dispatch:  
env:
  NEWS_API_KEY:957d817000d64a4ba693fd3b8822a282
# --- 作业定义 ---
jobs:
  update-content:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置Python环境
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # 步骤 3: 安装依赖库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, skipping dependency installation."
          fi

      # 步骤 4: 执行您的更新脚本
      - name: Run content update script
        run: python ./scripts/update_time.py

      # 步骤 5: 提交并推送文件变更
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "Automated content update by GitHub Actions"
            git push
          fi
