name: Update News Data

on:
  # 每30分钟自动运行一次
  schedule:
    - cron: '*/30 * * * *'
  # 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    # 关键修复：授予工作流向仓库写入内容的权限
    permissions:
      contents: write

    steps:
      # 第一步：检出你的主分支代码
      - name: Checkout main branch
        uses: actions/checkout@v3

      # 第二步：设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' # 使用 Python 3.x

      # 第三步：安装依赖项
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 第四步：执行你的 Python 脚本更新数据
      - name: Run Python script to update data
        run: python update_data.py
        env:
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}

      # 第五步：使用专门的 Action 将更改推送到 gh-pages 分支
      # 这是解决 git fetch/push 问题的行业标准方案
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 指定要部署的分支为 gh-pages
          publish_branch: gh-pages
          # 指定要发布的内容目录，这里是包含 news_data.json 的 data 目录
          publish_dir: ./data
          # 保持目标分支 (gh-pages) 的历史记录，只更新 data 目录
          keep_files: true
          # 自定义提交信息
          commit_message: 'docs: Auto-update news data'
