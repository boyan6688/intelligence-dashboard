# .github/workflows/update_data.yml

name: Update News Data Automatically

on:
  # 当代码推送到 main 分支时触发
  push:
    branches:
      - main
  # 定时触发，例如每6小时运行一次
  schedule:
    - cron: '0 */6 * * *'
  # 允许在 GitHub Actions 页面手动触发
  workflow_dispatch:

jobs:
  update-json-data:
    runs-on: ubuntu-latest
    
    # ✨ 关键新增：为工作流授予向仓库写入内容的权限
    permissions:
      contents: write

    steps:
      # 第一步：检出你的代码库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 第三步：安装 Python 依赖
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 第四步：运行你的 Python 脚本
      - name: Run update script
        env:
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        run: python update_data.py

      # 第五步：如果文件有变动，则自动提交
      - name: Commit and push if files changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Automated update of news data"
          file_pattern: "data/news_data.json"
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions-bot@users.noreply.github.com"
