name: Update News Data and Deploy Website

# 触发器：允许手动从 Actions 页面运行
on:
  workflow_dispatch:
  # 定时触发，例如每4小时
  schedule:
    - cron: '0 */4 * * *'

# 权限设置：必须授予 'contents: write' 权限，以便 Action 可以向仓库推送 gh-pages 分支
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 第 1 步：检出主分支的全部代码，包括网站和脚本
      - name: Checkout repository
        uses: actions/checkout@v4  # 升级到 v4

      # 第 2 步：设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5  # 升级到 v5
        with:
          python-version: '3.10'

      # 第 3 步：安装 Python 依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 第 4 步：运行脚本生成最新的 news_data.json
      - name: Run script to fetch and save data
        run: python update_data.py # 确认这是您的脚本文件名
        env:
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}

      # 第 5 步：部署整个项目到 gh-pages 分支
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4  # 升级到 v4
        with:
          # 使用 GitHub Actions 自动提供的令牌进行认证
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          # ✨✨✨ 关键修复 ✨✨✨
          # 将发布目录从 './data' 改为 '.'
          # '.' 代表仓库的根目录，即发布所有文件
          publish_dir: .
          
          # 为提交信息添加作者，方便追踪
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'docs(data): Update news data and deploy site'
